name: Flyway Migrate

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup and Enable Zrok
        run: |
          # Create a temporary directory
          cd $(mktemp -d)
          
          # Get latest Zrok version
          ZROK_VERSION=$(
          curl -sSf https://api.github.com/repos/openziti/zrok/releases/latest | jq -r '.tag_name'
          )
          
          # Determine architecture
          case $(uname -m) in
          x86_64)         GOXARCH=amd64 ;;
          aarch64|arm64)  GOXARCH=arm64 ;;
          arm*)           GOXARCH=armv7 ;;
          *)              echo "ERROR: unknown arch '$(uname -m)'" >&2; exit 1 ;;
          esac
          
          # Download and extract Zrok
          curl -sSfL \
          "https://github.com/openziti/zrok/releases/download/${ZROK_VERSION}/zrok_${ZROK_VERSION#v}_linux_${GOXARCH}.tar.gz" \
          | tar -xz -f -
          
          # Install Zrok
          sudo install -o root -g root ./zrok /usr/local/bin/
          echo "Zrok installed successfully."
          sleep 3
          
          # Enable Zrok
          zrok enable ${{ secrets.ZROK_TOKEN }}
          echo "Zrok enabled."
          sleep 3
          
          # Connect to PostgreSQL via Zrok
          zrok access private ${{ secrets.ZROK_SHARE }} --bind "127.0.0.1:5432" --headless &
          echo "Zrok access started."
          sleep 3
          
          # Debug Zrok Connection
          zrok status
          echo "Zrok status checked."
          sleep 3
          
          # Wait for Tunnel to Establish
          echo "Waiting for tunnel to be ready..."
          sleep 3

          # Show All Running Processes
          # ps aux | grep zrok

          # Check Active Ports
          # sudo netstat -tulnp | grep zrok

      - name: Test Database Connection Push
        if: github.event_name == 'push'
        run: |
          pg_isready -h ${{ secrets.DB_HOST }} -p 5432 -U ${{ secrets.DB_USERNAME }} -d ${{ secrets.DB_DBNAME }}

      - name: Test Database Connection Pull
        if: github.event_name == 'pull_request'
        run: |
          pg_isready -h ${{ secrets.DB_HOST_SANDBOX }} -p 5432 -U ${{ secrets.DB_USERNAME_SANDBOX }} -d ${{ secrets.DB_DBNAME_SANDBOX }}

      - name: Run Flyway Migrations (Production)
        if: github.event_name == 'push'
        run: |
          docker run --rm --network="host" \
          -v ${{ github.workspace }}/app/src/main/resources/db/migration:/flyway/sql \
          flyway/flyway:11.9.1 \
          -url=jdbc:postgresql://${{ secrets.DB_HOST }}:5432/${{ secrets.DB_DBNAME }} \
          -user=${{ secrets.DB_USERNAME }} \
          -password=${{ secrets.DB_PASSWORD }} \
          migrate

      - name: Run Flyway Migrations (Sandbox)
        if: github.event_name == 'pull_request'
        run: |
          docker run --rm --network="host" \
            -v ${{ github.workspace }}/app/src/main/resources/db/migration:/flyway/sql \
            flyway/flyway:11.9.1 \
            -url=jdbc:postgresql://${{ secrets.DB_HOST_SANDBOX }}:5432/${{ secrets.DB_DBNAME_SANDBOX }} \
            -user=${{ secrets.DB_USERNAME_SANDBOX }} \
            -password=${{ secrets.DB_PASSWORD_SANDBOX }} \
            migrate

      - name: Disable and Remove Zrok
        run: |
          # Disable Zrok
          zrok disable
          
          # Remove Zrok
          rm -rf ~/.zrok
