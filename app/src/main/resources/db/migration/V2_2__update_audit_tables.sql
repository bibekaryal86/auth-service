CREATE TABLE platform
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    platform_name VARCHAR(100)                                         NOT NULL UNIQUE,
    platform_desc   TEXT                                                 NOT NULL,
    created_date  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date  TIMESTAMP
);

CREATE TABLE profile
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    first_name   VARCHAR(50)                                          NOT NULL,
    last_name    VARCHAR(50)                                          NOT NULL,
    email        VARCHAR(250)                                         NOT NULL UNIQUE,
    phone        VARCHAR(50),
    password     VARCHAR(500)                                         NOT NULL,
    is_validated BOOLEAN                                              NOT NULL,
    login_attempts INTEGER,
    last_login TIMESTAMP,
    created_date TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date TIMESTAMP
);

CREATE TABLE address_type
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    type_name   VARCHAR(100)                                         NOT NULL UNIQUE,
    type_desc   TEXT                                                 NOT NULL,
    created_date  TIMESTAMP                                          NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date  TIMESTAMP                                          NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date  TIMESTAMP
);

CREATE TABLE profile_address
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    profile_id  BIGINT                                              NOT NULL,
    type_id     BIGINT                                              NOT NULL,
    street      VARCHAR(250)                                         NOT NULL,
    city        VARCHAR(100)                                         NOT NULL,
    state       VARCHAR(5)                                           NOT NULL,
    country     VARCHAR(100)                                         NOT NULL,
    postal_code VARCHAR(10)                                          NOT NULL,
    created_date  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date  TIMESTAMP,
    FOREIGN KEY (profile_id) REFERENCES profile (id),
    FOREIGN KEY (type_id) REFERENCES address_type (id),
    CONSTRAINT uc_profile_and_address UNIQUE (profile_id, type_id)
);

CREATE TABLE token
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    platform_id   BIGINT                                              NOT NULL,
    profile_id    BIGINT                                              NOT NULL,
    ip_address    VARCHAR(50)                                          NOT NULL,
    access_token  VARCHAR(1000)                                        NOT NULL UNIQUE,
    refresh_token VARCHAR(1000)                                        NOT NULL UNIQUE,
    created_date  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date  TIMESTAMP,
    FOREIGN KEY (platform_id) REFERENCES platform (id),
    FOREIGN KEY (profile_id) REFERENCES profile (id)
);

CREATE TABLE role
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    role_name    VARCHAR(100)                                         NOT NULL UNIQUE,
    role_desc  TEXT                                                 NOT NULL,
    created_date TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date TIMESTAMP
);

CREATE TABLE permission
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    permission_name VARCHAR(100)                                         NOT NULL UNIQUE,
    permission_desc     TEXT                                                 NOT NULL,
    created_date    TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_date    TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    deleted_date    TIMESTAMP
);

CREATE TABLE platform_profile_role
(
    platform_id   BIGINT                                              NOT NULL,
    profile_id    BIGINT                                              NOT NULL,
    role_id       BIGINT                                              NOT NULL,
    assigned_date TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (platform_id, profile_id, role_id),
    FOREIGN KEY (platform_id) REFERENCES platform (id),
    FOREIGN KEY (profile_id) REFERENCES profile (id),
    FOREIGN KEY (role_id) REFERENCES role (id)
);

CREATE TABLE platform_role_permission
(
    platform_id   BIGINT                                              NOT NULL,
    role_id       BIGINT                                              NOT NULL,
    permission_id BIGINT                                              NOT NULL,
    assigned_date TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (platform_id, role_id, permission_id),
    FOREIGN KEY (platform_id) REFERENCES platform (id),
    FOREIGN KEY (role_id) REFERENCES role (id),
    FOREIGN KEY (permission_id) REFERENCES permission (id)
);

CREATE TABLE audit_permission
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    permission_id BIGINT,
    event_type    VARCHAR(50)                                          NOT NULL,
    event_desc    TEXT,
    event_data    JSONB,
    created_at    TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by    BIGINT,
    ip_address    VARCHAR(50)                                          NOT NULL,
    user_agent    VARCHAR(1000)                                         NOT NULL,
    FOREIGN KEY (permission_id) REFERENCES permission (id) ON DELETE SET NULL,
    FOREIGN KEY (created_by) REFERENCES profile (id) ON DELETE SET NULL
);

CREATE TABLE audit_role
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    role_id    BIGINT,
    event_type VARCHAR(50)                                          NOT NULL,
    event_desc TEXT,
    event_data JSONB,
    created_at TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by BIGINT,
    ip_address VARCHAR(50)                                          NOT NULL,
    user_agent VARCHAR(1000)                                         NOT NULL,
    FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE SET NULL,
    FOREIGN KEY (created_by) REFERENCES profile (id) ON DELETE SET NULL
);

CREATE TABLE audit_profile
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    profile_id BIGINT,
    event_type VARCHAR(50)                                          NOT NULL,
    event_desc TEXT,
    event_data JSONB,
    created_at TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by BIGINT,
    ip_address VARCHAR(50)                                          NOT NULL,
    user_agent VARCHAR(1000)                                         NOT NULL,
    FOREIGN KEY (profile_id) REFERENCES profile (id) ON DELETE SET NULL,
    FOREIGN KEY (created_by) REFERENCES profile (id) ON DELETE SET NULL
);

CREATE TABLE audit_platform
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
    platform_id BIGINT,
    event_type  VARCHAR(50)                                          NOT NULL,
    event_desc  TEXT,
    event_data  JSONB,
    created_at  TIMESTAMP                                            NOT NULL DEFAULT CURRENT_TIMESTAMP,
    created_by  BIGINT,
    ip_address  VARCHAR(50)                                          NOT NULL,
    user_agent  VARCHAR(1000)                                         NOT NULL,
    FOREIGN KEY (platform_id) REFERENCES platform (id) ON DELETE SET NULL,
    FOREIGN KEY (created_by) REFERENCES profile (id) ON DELETE SET NULL
);

-- unique indexes
CREATE UNIQUE INDEX idx_profile_phone ON profile (phone) WHERE phone IS NOT NULL;
-- indexes
CREATE INDEX idx_platform_id ON platform (id);
CREATE INDEX idx_platform_name ON platform (platform_name);
CREATE INDEX idx_profile_id ON profile (id);
CREATE INDEX idx_profile_email ON profile (email);
CREATE INDEX idx_profile_password ON profile (password);
CREATE INDEX idx_profile_deleted_date ON profile (deleted_date);
CREATE INDEX idx_profile_address_id ON profile_address (id);
CREATE INDEX idx_role_id ON role (id);
CREATE INDEX idx_role_name ON role (role_name);
CREATE INDEX idx_permission_id ON permission (id);
CREATE INDEX idx_permission_name ON permission (permission_name);
CREATE INDEX idx_audit_platform_created_at ON audit_platform (created_at);
CREATE INDEX idx_audit_profile_created_at ON audit_profile (created_at);
CREATE INDEX idx_audit_role_created_at ON audit_role (created_at);
CREATE INDEX idx_audit_permission_created_at ON audit_permission (created_at);
CREATE INDEX idx_audit_platform_created_by ON audit_platform (created_by);
CREATE INDEX idx_audit_profile_created_by ON audit_profile (created_by);
CREATE INDEX idx_audit_role_created_by ON audit_role (created_by);
CREATE INDEX idx_audit_permission_created_by ON audit_permission (created_by);
CREATE INDEX idx_audit_platform_platform_id ON audit_platform (platform_id);
CREATE INDEX idx_audit_profile_profile_id ON audit_profile (profile_id);
CREATE INDEX idx_audit_role_role_id ON audit_role (role_id);
CREATE INDEX idx_audit_permission_permission_id ON audit_permission (permission_id);

-- admin table data
INSERT INTO address_type (type_name, type_desc) VALUES
('Mailing', 'Mailing Address');
INSERT INTO address_type (type_name, type_desc) VALUES
('Billing', 'Billing Address');

INSERT INTO platform (platform_name, platform_desc)
VALUES ('Auth Service', 'Authentication / Authorization Server with Roles and Permissions');
INSERT INTO platform (platform_name, platform_desc)
VALUES ('Env Service', 'Platform to hold runtime variables for different services');
INSERT INTO platform (platform_name, platform_desc)
VALUES ('Personal Expenses Tracking System', 'Application to manage / budget personal finances');
INSERT INTO platform (platform_name, platform_desc)
VALUES ('Health Data', 'Application to manage / track health test results');
INSERT INTO platform (platform_name, platform_desc)
VALUES ('Trackcase', 'Application to manage immigration / court cases');

INSERT INTO role (role_name, role_desc)
VALUES ('SUPERUSER', 'User has all and unlimited access, including hard delete');
INSERT INTO role (role_name, role_desc)
VALUES ('POWERUSER', 'User has all access, including soft delete. View access to ref/admin data');
INSERT INTO role (role_name, role_desc)
VALUES ('STANDARD', 'User has create, read and update access. No access to ref/admin data');
INSERT INTO role (role_name, role_desc)
VALUES ('GUEST', 'User has view only access. No access to ref/admin data');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('PERMISSION_CREATE', 'Can Add Permission');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PERMISSION_READ', 'Can View Permission(s)');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PERMISSION_UPDATE', 'Can Update Permission');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PERMISSION_DELETE', 'Can Delete Permission');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('ROLE_CREATE', 'Can Add Role');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('ROLE_READ', 'Can View Role(s)');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('ROLE_UPDATE', 'Can Update Role');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('ROLE_DELETE', 'Can Delete Role');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_CREATE', 'Can Add Profile');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_READ', 'Can View Profile(s)');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_UPDATE', 'Can Update Profile');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_DELETE', 'Can Delete Profile');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_CREATE', 'Can Add Platform');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_READ', 'Can View Platform(s)');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_UPDATE', 'Can Update Platform');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_DELETE', 'Can Delete Platform');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_PROFILE_ROLE_READ', 'Can View Platform Profile Role');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_ROLE_PERMISSION_READ', 'Can View Platform Role Permission');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_PROFILE_ROLE_ASSIGN', 'Can Add Role to Profile in Platform');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_PROFILE_ROLE_UNASSIGN', 'Can Remove Role from Profile in Platform');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_ROLE_PERMISSION_ASSIGN', 'Can Add Permission to Role in Platform');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PLATFORM_ROLE_PERMISSION_UNASSIGN', 'Can Remove Permission from Role in Platform');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('ADDRESS_TYPE_CREATE', 'Can Add Address Type');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('ADDRESS_TYPE_READ', 'Can Read Address Type');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('ADDRESS_TYPE_UPDATE', 'Can Update Address Type');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('ADDRESS_TYPE_DELETE', 'Can Delete Address Type');

INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_STATUS_CREATE', 'Can Add Profile Status');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_STATUS_READ', 'Can Read Profile Status');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_STATUS_UPDATE', 'Can Update Profile Status');
INSERT INTO permission (permission_name, permission_desc)
VALUES ('PROFILE_STATUS_DELETE', 'Can Delete Profile Status');

INSERT INTO platform_role_permission (platform_id, role_id, permission_id)
VALUES (1, 2, 2); -- Auth Service, POWERUSER, PERMISSION_READ
INSERT INTO platform_role_permission (platform_id, role_id, permission_id)
VALUES (1, 2, 6); -- Auth Service, POWERUSER, ROLE_READ
INSERT INTO platform_role_permission (platform_id, role_id, permission_id)
VALUES (1, 2, 10); -- Auth Service, POWERUSER, PROFILE_READ
INSERT INTO platform_role_permission (platform_id, role_id, permission_id)
VALUES (1, 2, 14); -- Auth Service, POWERUSER, PLATFORM_READ
INSERT INTO platform_role_permission (platform_id, role_id, permission_id)
VALUES (1, 2, 22); -- Auth Service, POWERUSER, ADDRESS_TYPE_READ
INSERT INTO platform_role_permission (platform_id, role_id, permission_id)
VALUES (1, 2, 26); -- Auth Service, POWERUSER, PROFILE_STATUS_READ

-- DROP TABLE public.audit_platform CASCADE;
-- DROP TABLE public.audit_profile CASCADE;
-- DROP TABLE public.audit_role CASCADE;
-- DROP TABLE public.audit_permission CASCADE;
-- DROP TABLE public.platform_role_permission CASCADE;
-- DROP TABLE public.platform_profile_role CASCADE;
-- DROP TABLE public.permission CASCADE;
-- DROP TABLE public.role CASCADE;
-- DROP TABLE public.token CASCADE;
-- DROP TABLE public.profile_address CASCADE;
-- DROP TABLE public.address_type CASCADE;
-- DROP TABLE public.profile CASCADE;
-- DROP TABLE public.platform CASCADE;
-- DROP TABLE public.flyway_schema_history;
