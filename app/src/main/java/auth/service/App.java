/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package auth.service;

import static auth.service.app.util.ConstantUtils.ENV_KEY_NAMES;
import static auth.service.app.util.ConstantUtils.ENV_SERVER_PORT;
import static auth.service.app.util.SystemEnvPropertyUtils.getAllSystemEnvProperties;
import static auth.service.app.util.SystemEnvPropertyUtils.getSystemEnvProperty;
import static java.util.Collections.singletonMap;

import java.util.List;
import java.util.Map;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.EnableAspectJAutoProxy;
import org.springframework.transaction.annotation.EnableTransactionManagement;

@Slf4j
@SpringBootApplication
@EnableTransactionManagement
@EnableAspectJAutoProxy
public class App {

  public static void main(String[] args) {
    log.info("Begin application initialization...");
    validateInitArgs();
    SpringApplication app = new SpringApplication(App.class);
    app.setDefaultProperties(
        singletonMap("server.port", getSystemEnvProperty(ENV_SERVER_PORT, "8080")));
    app.run(args);
    log.info("End application initialization...");
  }

  private static void validateInitArgs() {
    final Map<String, String> properties = getAllSystemEnvProperties();
    final List<String> requiredEnvProperties =
        ENV_KEY_NAMES.stream().filter(key -> !ENV_SERVER_PORT.equals(key)).toList();
    final List<String> errors =
        requiredEnvProperties.stream().filter(key -> properties.get(key) == null).toList();
    if (!errors.isEmpty()) {
      throw new IllegalStateException(
          "One or more environment configurations could not be accessed...");
    }
  }
}
